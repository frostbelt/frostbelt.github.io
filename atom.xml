<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>frostbelt&#39;s home</title>
  
  <subtitle>想学更多有意思的东西，想做自己的网站，想学画画</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://frostbelt.github.io/"/>
  <updated>2020-03-13T01:56:07.711Z</updated>
  <id>https://frostbelt.github.io/</id>
  
  <author>
    <name>frostbelt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>vue cli 国际化</title>
    <link href="https://frostbelt.github.io/2020/03/13/vue-cli-%E5%9B%BD%E9%99%85%E5%8C%96/"/>
    <id>https://frostbelt.github.io/2020/03/13/vue-cli-国际化/</id>
    <published>2020-03-13T01:43:44.000Z</published>
    <updated>2020-03-13T01:56:07.711Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>vue-i18n</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install vue-i18n --save</span><br></pre></td></tr></table></figure></p><p>配置 main.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// i18n，国际化</span><br><span class="line">import VueI18n from &apos;vue-i18n&apos;</span><br><span class="line">Vue.use(VueI18n)</span><br><span class="line">const i18n = new VueI18n(&#123;</span><br><span class="line">  locale: &apos;zh&apos;,</span><br><span class="line">  messages: &#123;</span><br><span class="line">    &apos;zh&apos;: require(&apos;@/assets/languages/zh.json&apos;),</span><br><span class="line">    &apos;en&apos;: require(&apos;@/assets/languages/en.json&apos;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">let app = new Vue(&#123;</span><br><span class="line">router,</span><br><span class="line">  store,</span><br><span class="line">  // i18n，国际化</span><br><span class="line">  i18n,</span><br><span class="line">render: h =&gt; h(App)</span><br><span class="line">&#125;).$mount(&apos;#app&apos;);</span><br></pre></td></tr></table></figure></p><p>@/assets/languages/zh.json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;common&quot; : &#123;</span><br><span class="line">    &quot;app&quot; : &#123;</span><br><span class="line">      &quot;name&quot; : &quot;app 名称&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>@/assets/languages/en.json<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;common&quot; : &#123;</span><br><span class="line">    &quot;app&quot; : &#123;</span><br><span class="line">      &quot;name&quot; : &quot;app name&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>xxx.vue<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">template:</span><br><span class="line">&#123;&#123;$t(&quot;common.app.name&quot;)&#125;&#125;</span><br><span class="line">js:</span><br><span class="line">this.$t(&quot;common.app.name&quot;)</span><br></pre></td></tr></table></figure></p><p>切换语言<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">this.$i18n.locale = &apos;en&apos;;</span><br></pre></td></tr></table></figure></p><p>注:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 应该根据用户的地域设置默认语言</span><br><span class="line">2. 用户切换语言后，应该种 cookie</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用&lt;code&gt;vue-i18n&lt;/code&gt;&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;
      
    
    </summary>
    
    
      <category term="vue" scheme="https://frostbelt.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue cli 中图片的使用</title>
    <link href="https://frostbelt.github.io/2020/03/13/vue-cli-%E4%B8%AD%E5%9B%BE%E7%89%87%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://frostbelt.github.io/2020/03/13/vue-cli-中图片的使用/</id>
    <published>2020-03-13T01:31:42.000Z</published>
    <updated>2020-03-13T01:34:06.300Z</updated>
    
    <content type="html"><![CDATA[<p>vue.config.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  ...</span><br><span class="line">  chainWebpack: config =&gt; &#123;</span><br><span class="line">    // images alias</span><br><span class="line">    config.resolve.alias.set(&apos;@img&apos;, path.resolve(__dirname, &apos;src/assets/images&apos;))</span><br><span class="line">    ...</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在 js 中使用图片<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">require(&apos;@img/ksp_72.png&apos;)</span><br><span class="line">eg: </span><br><span class="line">:style=&quot;&apos;background:url(&apos; + require(&apos;@img/ksp_72.png&apos;) + &apos;)&apos;&quot;</span><br></pre></td></tr></table></figure></p><p>在 scss 中使用图片<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&apos;~@img/ksp_72.png&apos; </span><br><span class="line">eg: </span><br><span class="line">background: url(~@img/ksp_72.png)</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue.config.js&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/
      
    
    </summary>
    
    
      <category term="vue" scheme="https://frostbelt.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>vue 公用 scss</title>
    <link href="https://frostbelt.github.io/2020/03/13/vue-%E5%85%AC%E7%94%A8-scss/"/>
    <id>https://frostbelt.github.io/2020/03/13/vue-公用-scss/</id>
    <published>2020-03-13T01:29:35.000Z</published>
    <updated>2020-03-13T01:30:40.414Z</updated>
    
    <content type="html"><![CDATA[<p>vue.config.js 中引入全局 scss<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">module.exports = &#123;</span><br><span class="line">  css : &#123;</span><br><span class="line">    loaderOptions : &#123;</span><br><span class="line">      sass : &#123;</span><br><span class="line">        data : `</span><br><span class="line">          @import &quot;@/assets/styles/config.scss&quot;;</span><br><span class="line">          @import &quot;@/assets/styles/common.scss&quot;;</span><br><span class="line">        `,</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;vue.config.js 中引入全局 scss&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="vue" scheme="https://frostbelt.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>git 弹出的 vi 编辑器</title>
    <link href="https://frostbelt.github.io/2020/01/20/git-%E5%BC%B9%E5%87%BA%E7%9A%84-vi-%E7%BC%96%E8%BE%91%E5%99%A8/"/>
    <id>https://frostbelt.github.io/2020/01/20/git-弹出的-vi-编辑器/</id>
    <published>2020-01-20T03:21:10.000Z</published>
    <updated>2020-01-20T03:24:18.565Z</updated>
    
    <content type="html"><![CDATA[<p>使用 git 时为什么会弹出 vi 编辑器呢？<br><code>git commit</code> 和 <code>git merge</code> 时，需要输入说明性的 <code>message</code></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git ci -m &quot;xxx&quot;</span><br><span class="line">git merge develop -m &quot;xxx&quot;</span><br></pre></td></tr></table></figure><p>如果没加有效的 <code>message</code> -m “xxx”，就会弹出 vi 编辑器，要求对本次提交或合并进行说明</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用 git 时为什么会弹出 vi 编辑器呢？&lt;br&gt;&lt;code&gt;git commit&lt;/code&gt; 和 &lt;code&gt;git merge&lt;/code&gt; 时，需要输入说明性的 &lt;code&gt;message&lt;/code&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://frostbelt.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>mac 解决 brew install 的 Permission denied 问题</title>
    <link href="https://frostbelt.github.io/2020/01/17/mac-%E8%A7%A3%E5%86%B3-brew-install-%E7%9A%84-Permission-denied-%E9%97%AE%E9%A2%98/"/>
    <id>https://frostbelt.github.io/2020/01/17/mac-解决-brew-install-的-Permission-denied-问题/</id>
    <published>2020-01-17T07:55:17.000Z</published>
    <updated>2020-01-17T07:56:50.583Z</updated>
    
    <content type="html"><![CDATA[<h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ brew install graphicsmagick</span><br><span class="line">Error: Permission denied @ apply2files - /usr/local/lib/node_modules/umi/node_modules/_clipboardy@1.2.3@clipboardy/fallbacks/.DS_Store</span><br></pre></td></tr></table></figure><h3 id="解决权限问题"><a href="#解决权限问题" class="headerlink" title="解决权限问题"></a>解决权限问题</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R $(whoami):admin /usr/local</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;问题&quot;&gt;&lt;a href=&quot;#问题&quot; class=&quot;headerlink&quot; title=&quot;问题&quot;&gt;&lt;/a&gt;问题&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span 
      
    
    </summary>
    
    
      <category term="mac" scheme="https://frostbelt.github.io/tags/mac/"/>
    
      <category term="brew" scheme="https://frostbelt.github.io/tags/brew/"/>
    
  </entry>
  
  <entry>
    <title>mac 图片批量重命名</title>
    <link href="https://frostbelt.github.io/2020/01/07/mac-%E5%9B%BE%E7%89%87%E6%89%B9%E9%87%8F%E9%87%8D%E5%91%BD%E5%90%8D/"/>
    <id>https://frostbelt.github.io/2020/01/07/mac-图片批量重命名/</id>
    <published>2020-01-07T08:08:18.000Z</published>
    <updated>2020-01-07T08:13:39.249Z</updated>
    
    <content type="html"><![CDATA[<p>选择需要批量重命名的图片文件，右键-&gt;点击<code>给x个项目重新命名...</code></p><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p>重命名为“图片1.png”, “图片2.png”…<br>选择格式，名称和索引，自定格式为“图片”，开始数字为“1”</p><p>重命名为“Photo(1).png”，“Photo(2).png”…<br>先重命名为“Photo(1.png”，“Photo(2.png”…，再选择“添加文本”，在后面加个“)”</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;选择需要批量重命名的图片文件，右键-&amp;gt;点击&lt;code&gt;给x个项目重新命名...&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;示例&quot;&gt;&lt;a href=&quot;#示例&quot; class=&quot;headerlink&quot; title=&quot;示例&quot;&gt;&lt;/a&gt;示例&lt;/h3&gt;&lt;p&gt;重命名为“图片1.png”
      
    
    </summary>
    
    
      <category term="mac" scheme="https://frostbelt.github.io/tags/mac/"/>
    
  </entry>
  
  <entry>
    <title>scss 中 &amp; 的使用</title>
    <link href="https://frostbelt.github.io/2020/01/01/scss-%E4%B8%AD-%E7%9A%84%E4%BD%BF%E7%94%A8/"/>
    <id>https://frostbelt.github.io/2020/01/01/scss-中-的使用/</id>
    <published>2020-01-01T09:10:46.000Z</published>
    <updated>2020-01-01T09:13:27.733Z</updated>
    
    <content type="html"><![CDATA[<p>在 <code>scss</code> 中，<code>&amp;</code> 表示当前路径</p><h3 id="示例一"><a href="#示例一" class="headerlink" title="示例一"></a>示例一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.child &#123;</span><br><span class="line">  &amp;.child-cur&#123;</span><br><span class="line">    </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.child&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">.child.child-cur&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="示例二"><a href="#示例二" class="headerlink" title="示例二"></a>示例二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.child&#123; </span><br><span class="line">  display: none;</span><br><span class="line"></span><br><span class="line">  @at-root .page-ios &amp;&#123; </span><br><span class="line">    display: block;</span><br><span class="line">  &#125; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>编译后为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.child&#123; </span><br><span class="line">  display: none;</span><br><span class="line">&#125;</span><br><span class="line">.page-ios .child&#123;</span><br><span class="line">  display: block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 &lt;code&gt;scss&lt;/code&gt; 中，&lt;code&gt;&amp;amp;&lt;/code&gt; 表示当前路径&lt;/p&gt;
&lt;h3 id=&quot;示例一&quot;&gt;&lt;a href=&quot;#示例一&quot; class=&quot;headerlink&quot; title=&quot;示例一&quot;&gt;&lt;/a&gt;示例一&lt;/h3&gt;&lt;figure class=
      
    
    </summary>
    
    
      <category term="css" scheme="https://frostbelt.github.io/tags/css/"/>
    
      <category term="scss" scheme="https://frostbelt.github.io/tags/scss/"/>
    
  </entry>
  
  <entry>
    <title>阿里云日志服务日志解析</title>
    <link href="https://frostbelt.github.io/2019/12/11/%E9%98%BF%E9%87%8C%E4%BA%91%E6%97%A5%E5%BF%97%E6%9C%8D%E5%8A%A1%E6%97%A5%E5%BF%97%E8%A7%A3%E6%9E%90/"/>
    <id>https://frostbelt.github.io/2019/12/11/阿里云日志服务日志解析/</id>
    <published>2019-12-11T10:16:43.000Z</published>
    <updated>2019-12-11T10:38:11.173Z</updated>
    
    <content type="html"><![CDATA[<p>阿里云日志服务，设置索引时，如果字段类型为<code>String</code>，可以设置<code>分词符</code>。默认的分词符是<code>, &#39;&quot;;=()[]{}?@&amp;&lt;&gt;/:\n\t\r</code>。这个有什么用呢？</p><a id="more"></a><p>打点时，最好是各字段都有明确的含义，如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  key : &quot;update_chess_error&quot;,</span><br><span class="line">  action : &quot;1024&quot;,</span><br><span class="line">  ext : &quot;16&quot;,</span><br><span class="line">  refer : &quot;8&quot;,</span><br><span class="line">&#125;</span><br><span class="line">以上日志含义，在 1024 房间，更新牌面时发生了错误，从 8 更新到了 16</span><br></pre></td></tr></table></figure></p><p>但经常会遇到这种情况，字段不够用，需要把多个参数加到一个字段里<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  key : &quot;update_chess_error|room:1024|from:8|to:16&quot;,</span><br><span class="line">&#125;</span><br><span class="line">日志含义同上</span><br></pre></td></tr></table></figure></p><p>然而，上面的日志会非常不容易检索，因为按照分词规则，它会被切分成<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">update_chess_error|room</span><br><span class="line">1024|from</span><br><span class="line">8|to</span><br><span class="line">16</span><br></pre></td></tr></table></figure></p><p>而且检索<code>|</code>时会报错</p><p>可以优化为<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  key : &quot;update_chess_error,room1024,from8,to16&quot;,</span><br><span class="line">&#125;</span><br><span class="line">如查所有的该类型日志: key:update_chess_error</span><br><span class="line">如查所有房间1024的该类型日志: key:update_chess_error and key:room1024</span><br><span class="line">如查所有从8更新到16的该类型日志: key:update_chess_error and key:from8 and key:to16</span><br><span class="line">...</span><br></pre></td></tr></table></figure></p><p>更多查询语法参考<a href="https://help.aliyun.com/document_detail/29060.html?spm=5176.2020520112.2.1.2b2634c02mUaQX" target="_blank" rel="noopener">查询语法</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;阿里云日志服务，设置索引时，如果字段类型为&lt;code&gt;String&lt;/code&gt;，可以设置&lt;code&gt;分词符&lt;/code&gt;。默认的分词符是&lt;code&gt;, &amp;#39;&amp;quot;;=()[]{}?@&amp;amp;&amp;lt;&amp;gt;/:\n\t\r&lt;/code&gt;。这个有什么用呢？&lt;/p&gt;
    
    </summary>
    
    
      <category term="ali" scheme="https://frostbelt.github.io/tags/ali/"/>
    
      <category term="log" scheme="https://frostbelt.github.io/tags/log/"/>
    
  </entry>
  
  <entry>
    <title>iOS 安全区域</title>
    <link href="https://frostbelt.github.io/2019/11/28/iOS-%E5%AE%89%E5%85%A8%E5%8C%BA%E5%9F%9F/"/>
    <id>https://frostbelt.github.io/2019/11/28/iOS-安全区域/</id>
    <published>2019-11-28T03:30:43.000Z</published>
    <updated>2019-11-28T03:48:52.755Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">为什么页面在 iPhoneX 上，上下都有一部分空白(如果是横屏，左右下都有一部分空白)？</span><br><span class="line"></span><br><span class="line">有一个 fixed top:0 的 titleBar，为什么页面滚动时，页面内容会出现在 titleBar 的上面？</span><br></pre></td></tr></table></figure><a id="more"></a><p>是 iPhoneX 的”安全区域”问题<br>解决方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">在 meta viewport 上加 viewport-fit=cover</span><br><span class="line">如: &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0, viewport-fit=cover&quot;&gt;</span><br></pre></td></tr></table></figure></p><p>这样页面就可以覆盖到整个屏幕，当然也会带来一些小问题，如 titleBar 中间的内容无法显示，被前摄像头占用了<br>可以用媒体查询处理:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">// iPhoneX 的适配 </span><br><span class="line">@media only screen and (device-width: 375px) and (device-height: 812px) and (-webkit-device-pixel-ratio: 3) &#123;</span><br><span class="line">  // 底部给麦克留出空白</span><br><span class="line">  .page&#123;padding-bottom: 1.7rem;&#125;</span><br><span class="line"></span><br><span class="line">  // 头部从摄像头留出空白</span><br><span class="line">  .titleBar &#123;padding-top: 1rem;&#125;</span><br><span class="line">  .titleBar:before &#123;</span><br><span class="line">    content: &apos;&apos;;</span><br><span class="line">    position: absolute;</span><br><span class="line">    top: 0;</span><br><span class="line">    left: 0;</span><br><span class="line">    width: 100%;</span><br><span class="line">    height: 1rem;</span><br><span class="line">    background-color: #000000;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">注:</span><br><span class="line">上下都留出空白了，不就和之前一样了吗？为什么还要多此一举？</span><br><span class="line">不太一样</span><br><span class="line">加 viewport-fit=cover 可以在上下空白区显示自定义的内容，可以是背景色，也可以任意别的东西</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;为什么页面在 iPhoneX 上，上下都有一部分空白(如果是横屏，左右下都有一部分空白)？&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;有一个 fixed top:0 的 titleBar，为什么页面滚动时，页面内容会出现在 titleBar 的上面？&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://frostbelt.github.io/tags/css/"/>
    
      <category term="ios" scheme="https://frostbelt.github.io/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>select隐藏下拉箭头</title>
    <link href="https://frostbelt.github.io/2019/11/26/select%E9%9A%90%E8%97%8F%E4%B8%8B%E6%8B%89%E7%AE%AD%E5%A4%B4/"/>
    <id>https://frostbelt.github.io/2019/11/26/select隐藏下拉箭头/</id>
    <published>2019-11-26T06:28:58.000Z</published>
    <updated>2019-11-28T03:53:57.416Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">-webkit-appearance: none;</span><br><span class="line">appearance: none;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;
      
    
    </summary>
    
    
      <category term="css" scheme="https://frostbelt.github.io/tags/css/"/>
    
      <category term="select" scheme="https://frostbelt.github.io/tags/select/"/>
    
  </entry>
  
  <entry>
    <title>select文本居中</title>
    <link href="https://frostbelt.github.io/2019/11/26/select%E6%96%87%E6%9C%AC%E5%B1%85%E4%B8%AD/"/>
    <id>https://frostbelt.github.io/2019/11/26/select文本居中/</id>
    <published>2019-11-26T06:16:36.000Z</published>
    <updated>2019-11-28T03:53:57.416Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一般 DOM 节点，想让文本居中，定义 <code>text-align: center</code> 就可以了，但 select 却不好使，有什么办法？</p></blockquote><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">select&#123;</span><br><span class="line">  text-align: center;</span><br><span class="line">  text-align-last: center;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看 <code>text-align-last</code> 的说明，是为了处理 <code>justify</code> 的最后一行文本，并且注明只有 <code>text-align: justify</code> 时生效。<br>然而，上述方法的确可以解决 select 文本居中的问题。</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一般 DOM 节点，想让文本居中，定义 &lt;code&gt;text-align: center&lt;/code&gt; 就可以了，但 select 却不好使，有什么办法？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="css" scheme="https://frostbelt.github.io/tags/css/"/>
    
      <category term="select" scheme="https://frostbelt.github.io/tags/select/"/>
    
  </entry>
  
  <entry>
    <title>vscode 格式化</title>
    <link href="https://frostbelt.github.io/2019/11/18/vscode-%E6%A0%BC%E5%BC%8F%E5%8C%96/"/>
    <id>https://frostbelt.github.io/2019/11/18/vscode-格式化/</id>
    <published>2019-11-18T08:49:50.000Z</published>
    <updated>2019-11-18T09:18:46.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Prettier-Code-formatter"><a href="#Prettier-Code-formatter" class="headerlink" title="Prettier - Code formatter"></a>Prettier - Code formatter</h3><p>支持 JavaScript、TypeScript 和 CSS 格式化</p><h3 id="修改-vscode-的默认格式化工具"><a href="#修改-vscode-的默认格式化工具" class="headerlink" title="修改 vscode 的默认格式化工具"></a>修改 vscode 的默认格式化工具</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Code -&gt; 首选项 -&gt; 设置</span><br><span class="line">搜索 &quot;editor.defaultFormatter&quot;，修改为 &quot;esbenp.prettier-vscode&quot;</span><br><span class="line">&quot;editor.defaultFormatter&quot;: &quot;esbenp.prettier-vscode&quot;,</span><br></pre></td></tr></table></figure><h3 id="修改配置"><a href="#修改配置" class="headerlink" title="修改配置"></a>修改配置</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">1. 指定每行代码的最佳长度</span><br><span class="line">Code -&gt; 首选项 -&gt; 设置</span><br><span class="line">搜索 &quot;Prettier&quot;，修改</span><br><span class="line">Prettier: Print Width</span><br><span class="line">指定每行代码的最佳长度， 如果超出长度则换行。</span><br><span class="line">默认设置为 80，即每行超出 80 时折为 n 行。不喜欢这个设置，但关不了，就用默认值吧</span><br><span class="line">&quot;prettier.printWidth&quot;: 80</span><br><span class="line"></span><br><span class="line">2. Prettier: Single Quote</span><br><span class="line">如果为 true，将使用单引号而不是双引号</span><br><span class="line">这个很厉害了，规范化</span><br><span class="line">&quot;prettier.singleQuote&quot;: true</span><br><span class="line"></span><br><span class="line">3. Prettier: Use Tabs</span><br><span class="line">使用制表符（tab）缩进</span><br><span class="line">&quot;prettier.useTabs&quot;: true</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;Prettier-Code-formatter&quot;&gt;&lt;a href=&quot;#Prettier-Code-formatter&quot; class=&quot;headerlink&quot; title=&quot;Prettier - Code formatter&quot;&gt;&lt;/a&gt;Prettier - Code
      
    
    </summary>
    
    
      <category term="vscode" scheme="https://frostbelt.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>laya 自动编译</title>
    <link href="https://frostbelt.github.io/2019/11/18/laya-%E8%87%AA%E5%8A%A8%E7%BC%96%E8%AF%91/"/>
    <id>https://frostbelt.github.io/2019/11/18/laya-自动编译/</id>
    <published>2019-11-18T03:29:08.000Z</published>
    <updated>2019-11-18T03:34:31.000Z</updated>
    
    <content type="html"><![CDATA[<p>前面使用了 <a href="/2019/10/17/Laya-命令行编译-Mac/">Laya 命令行编译</a> 工具 <a href="https://github.com/Cola-Zhang/layaair2-cmd-plus" target="_blank" rel="noopener">layaair2-cmd-plus</a>，但每次修改完手动执行 <code>layaair2-plus-cmd compile</code> 还是有点麻烦</p><p>使用 fswatch 实现了监听文件变化自动编译</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"># !/bin/bash</span><br><span class="line"># 监听 src 目录，有变化时自动编译</span><br><span class="line"></span><br><span class="line"># 监听目录，有变化时停止监听，并编译</span><br><span class="line">function start_moniting()</span><br><span class="line">&#123;</span><br><span class="line">  echo &quot;正在监听 src 目录...&quot;</span><br><span class="line">  fswatch -1 ./src | while read file</span><br><span class="line">  do</span><br><span class="line">    docompile</span><br><span class="line">  done</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"># 编译完成后开始监听</span><br><span class="line">function docompile()</span><br><span class="line">&#123;</span><br><span class="line">  echo &quot;开始编译...&quot;</span><br><span class="line">  layaair2-plus-cmd compile</span><br><span class="line">  echo &quot;编译完成&quot;</span><br><span class="line">  start_moniting</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start_moniting</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前面使用了 &lt;a href=&quot;/2019/10/17/Laya-命令行编译-Mac/&quot;&gt;Laya 命令行编译&lt;/a&gt; 工具 &lt;a href=&quot;https://github.com/Cola-Zhang/layaair2-cmd-plus&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;layaair2-cmd-plus&lt;/a&gt;，但每次修改完手动执行 &lt;code&gt;layaair2-plus-cmd compile&lt;/code&gt; 还是有点麻烦&lt;/p&gt;
&lt;p&gt;使用 fswatch 实现了监听文件变化自动编译&lt;/p&gt;
    
    </summary>
    
    
      <category term="laya" scheme="https://frostbelt.github.io/tags/laya/"/>
    
  </entry>
  
  <entry>
    <title>fiddler 内置命令</title>
    <link href="https://frostbelt.github.io/2019/10/31/fiddler-%E5%86%85%E7%BD%AE%E5%91%BD%E4%BB%A4/"/>
    <id>https://frostbelt.github.io/2019/10/31/fiddler-内置命令/</id>
    <published>2019-10-31T11:14:09.000Z</published>
    <updated>2019-10-31T11:49:36.000Z</updated>
    
    <content type="html"><![CDATA[<p>引自<a href="https://www.cnblogs.com/nihaorz/p/5455148.html" target="_blank" rel="noopener">Fiddler内置命令</a></p><h3 id=""><a href="#" class="headerlink" title="?"></a>?</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">?google.com</span><br><span class="line">高亮显示所有 url 中包含 google.com 的请求</span><br></pre></td></tr></table></figure><h3 id="gt-和-lt"><a href="#gt-和-lt" class="headerlink" title="&gt; 和 &lt;"></a>&gt; 和 &lt;</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&gt;5000</span><br><span class="line">高亮显示所有包 &gt;5000 bytes 的请求</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="-1"><a href="#-1" class="headerlink" title="="></a>=</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">=200 </span><br><span class="line">高亮显示所有状态码为 200 的请求</span><br><span class="line">=post </span><br><span class="line">高亮显示所有 post 请求</span><br></pre></td></tr></table></figure><h3 id="-2"><a href="#-2" class="headerlink" title="@"></a>@</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@frostbelt.cn</span><br><span class="line">高亮显示所有 frostbelt.cn 域下或子域下的请求</span><br></pre></td></tr></table></figure><h3 id="bpafter"><a href="#bpafter" class="headerlink" title="bpafter"></a>bpafter</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bpafter xxx</span><br><span class="line">中断所有匹配到的请求，可以修改 response 后继续</span><br><span class="line">bpafter 解除中断</span><br></pre></td></tr></table></figure><h3 id="bps"><a href="#bps" class="headerlink" title="bps"></a>bps</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bps 200</span><br><span class="line">中断所有状态码为 200 的请求</span><br><span class="line">bps 解除中断</span><br></pre></td></tr></table></figure><h3 id="bpv-bpm"><a href="#bpv-bpm" class="headerlink" title="bpv / bpm"></a>bpv / bpm</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bpv get</span><br><span class="line">中断所有 get 请求</span><br><span class="line">bpv 解除中断</span><br></pre></td></tr></table></figure><h3 id="bpu"><a href="#bpu" class="headerlink" title="bpu"></a>bpu</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">跟 bpafter 类似，区别：bpu 是在发起请求时中断，而 bpafter 是在收到响应后中断。</span><br></pre></td></tr></table></figure><h3 id="g-go"><a href="#g-go" class="headerlink" title="g / go"></a>g / go</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">放行所有中断下来的会话。</span><br></pre></td></tr></table></figure><h3 id="cls-clear"><a href="#cls-clear" class="headerlink" title="cls / clear"></a>cls / clear</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">清除当前的所有请求</span><br></pre></td></tr></table></figure><h3 id="dump"><a href="#dump" class="headerlink" title="dump"></a>dump</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">将所有请求打包成saz压缩包，保存到“我的文档\Fiddler2\Captures”目录下</span><br></pre></td></tr></table></figure><h3 id="urlreplace"><a href="#urlreplace" class="headerlink" title="urlreplace"></a>urlreplace</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">urlreplace baidu.com google.com</span><br><span class="line">将所有 url 中的 baidu.com 替换成 google.com</span><br><span class="line">urlreplace 解除替换</span><br></pre></td></tr></table></figure><h3 id="select"><a href="#select" class="headerlink" title="select"></a>select</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select image/css/html</span><br><span class="line">选中所有的图片/css/html</span><br></pre></td></tr></table></figure><h3 id="allbut-keeponly"><a href="#allbut-keeponly" class="headerlink" title="allbut / keeponly"></a>allbut / keeponly</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">keeponly image</span><br><span class="line">将所有与图片无关的请求删除</span><br><span class="line">跟 select 类似，不过 allbut 和 keeponly 会将所有无关的会话删除。</span><br></pre></td></tr></table></figure><h3 id="start-或-stop"><a href="#start-或-stop" class="headerlink" title="start 或 stop"></a>start 或 stop</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">开始监听请求 或 停止监听请求</span><br></pre></td></tr></table></figure><h3 id="bold"><a href="#bold" class="headerlink" title="bold"></a>bold</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">bold google.com</span><br><span class="line">加粗显示所有 url 中有 google.com 的请求</span><br><span class="line">bold 取消加粗</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;引自&lt;a href=&quot;https://www.cnblogs.com/nihaorz/p/5455148.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Fiddler内置命令&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;&quot;&gt;&lt;a href=&quot;#&quot; class=&quot;headerlink&quot; title=&quot;?&quot;&gt;&lt;/a&gt;?&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;?google.com&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;高亮显示所有 url 中包含 google.com 的请求&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;gt-和-lt&quot;&gt;&lt;a href=&quot;#gt-和-lt&quot; class=&quot;headerlink&quot; title=&quot;&amp;gt; 和 &amp;lt;&quot;&gt;&lt;/a&gt;&amp;gt; 和 &amp;lt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;5000&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;高亮显示所有包 &amp;gt;5000 bytes 的请求&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="fiddler" scheme="https://frostbelt.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>laya js bridge</title>
    <link href="https://frostbelt.github.io/2019/10/21/laya-js-bridge/"/>
    <id>https://frostbelt.github.io/2019/10/21/laya-js-bridge/</id>
    <published>2019-10-21T02:20:40.000Z</published>
    <updated>2019-10-21T02:36:43.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="laya-文档"><a href="#laya-文档" class="headerlink" title="laya 文档"></a>laya 文档</h3><p><a href="https://ldc.layabox.com/doc/?nav=zh-js-7-2-3" target="_blank" rel="noopener">用反射机制实现二次开发</a></p><h3 id="注"><a href="#注" class="headerlink" title="注"></a>注</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">laya 的异步调用，内部并没有实现队列。如连续多次调用同一异步方法，回调函数会被覆盖，导致逻辑混乱。</span><br><span class="line">即异步调用需要串行调用</span><br><span class="line">方案: 所有接口使用同步方式调用，指定回调方法，客户端直接回调，类似 jsonp</span><br></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">const os = conchConfig.getOS();</span><br><span class="line"></span><br><span class="line">let GameClient = &#123;</span><br><span class="line">  is_android : os == &quot;Conch-android&quot;,</span><br><span class="line">  is_ios_jj : os == &quot;Conch-ios&quot;,</span><br><span class="line">  bridge : os == &quot;Conch-android&quot; ? PlatformClass.createClass(&quot;com.xxx.xxx.xxx.JSBridge&quot;) : PlatformClass.createClass(&quot;JSBridge&quot;),</span><br><span class="line"></span><br><span class="line">  data : &#123;&#125;,</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * toast (同步方法示例)</span><br><span class="line">   * @param &#123;String&#125; msg </span><br><span class="line">   */</span><br><span class="line">  alert (msg) &#123;</span><br><span class="line">    this.bridge.call(&quot;showMessage&quot;, msg);</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  /**</span><br><span class="line">   * 获取用户信息 (异步方法示例)</span><br><span class="line">   * @param &#123;Function&#125; cb 回调</span><br><span class="line">   * @param &#123;Boolean&#125; force_update 强制取最新信息</span><br><span class="line">   * @example </span><br><span class="line">   *    GameClient.getUserInfo(res =&gt; &#123;</span><br><span class="line">   *      // 已登录</span><br><span class="line">   *      if(res.errno == 1)&#123;</span><br><span class="line">   *        res.data = &#123;</span><br><span class="line">   *          name : &quot;xxx&quot;,</span><br><span class="line">   *          avatar : &quot;xxx&quot;,</span><br><span class="line">   *        &#125;;</span><br><span class="line">   *      &#125;</span><br><span class="line">   *    &#125;);</span><br><span class="line">   */</span><br><span class="line">  getUserInfo (cb, force_update) &#123;</span><br><span class="line">    cb = cb || function()&#123;&#125;;</span><br><span class="line"></span><br><span class="line">    // 已记录登录状态</span><br><span class="line">    if(this.data.userInfo &amp;&amp; !force_update)&#123;</span><br><span class="line">      cb(this.data.userInfo);</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    this.bridge.callWithBack(res =&gt; &#123;</span><br><span class="line">      res = typeof res == &quot;string&quot; ? JSON.parse(res) : res;</span><br><span class="line">      if(res.errno == 1)&#123;</span><br><span class="line">        this.data.userInfo = res.data;</span><br><span class="line">      &#125;</span><br><span class="line">      else &#123;</span><br><span class="line">        this.data.userInfo = null;</span><br><span class="line">      &#125;</span><br><span class="line">      cb(this.data.userInfo);</span><br><span class="line">    &#125;, &quot;getCurrentUserInfo&quot;);</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line">export default GameClient;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;laya-文档&quot;&gt;&lt;a href=&quot;#laya-文档&quot; class=&quot;headerlink&quot; title=&quot;laya 文档&quot;&gt;&lt;/a&gt;laya 文档&lt;/h3&gt;&lt;p&gt;&lt;a href=&quot;https://ldc.layabox.com/doc/?nav=zh-js-7-
      
    
    </summary>
    
    
      <category term="laya" scheme="https://frostbelt.github.io/tags/laya/"/>
    
  </entry>
  
  <entry>
    <title>fiddler显示IP</title>
    <link href="https://frostbelt.github.io/2019/10/19/fiddler%E6%98%BE%E7%A4%BAIP/"/>
    <id>https://frostbelt.github.io/2019/10/19/fiddler显示IP/</id>
    <published>2019-10-19T10:39:42.000Z</published>
    <updated>2019-10-19T10:41:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>Rules-&gt;Customize Rules…</p><p>在 static function Main() 中加一行<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">FiddlerObject.UI.lvSessions.AddBoundColumn(&quot;ServerIP&quot;,120,&quot;X-HostIP&quot;);</span><br></pre></td></tr></table></figure></p><p>后加在左侧的最后一栏，把它拖动到前面</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Rules-&amp;gt;Customize Rules…&lt;/p&gt;
&lt;p&gt;在 static function Main() 中加一行&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;sp
      
    
    </summary>
    
    
      <category term="fiddler" scheme="https://frostbelt.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>fiddler抓包--websocket</title>
    <link href="https://frostbelt.github.io/2019/10/19/fiddler%E6%8A%93%E5%8C%85-websocket/"/>
    <id>https://frostbelt.github.io/2019/10/19/fiddler抓包-websocket/</id>
    <published>2019-10-19T10:31:31.000Z</published>
    <updated>2019-10-19T10:38:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>Rules-&gt;Customize Rules…</p><p>在 class Handlers 中加入以下代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static function OnWebSocketMessage(oMsg:WebSocketMessage)&#123;</span><br><span class="line">  FiddlerApplication.Log.LogString(oMsg.ToString());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后就可以在右侧的 <code>log</code> tab 下看到 websocket 的消息了</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Rules-&amp;gt;Customize Rules…&lt;/p&gt;
&lt;p&gt;在 class Handlers 中加入以下代码&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span cl
      
    
    </summary>
    
    
      <category term="fiddler" scheme="https://frostbelt.github.io/tags/fiddler/"/>
    
      <category term="websocket" scheme="https://frostbelt.github.io/tags/websocket/"/>
    
  </entry>
  
  <entry>
    <title>Laya 命令行编译(Mac)</title>
    <link href="https://frostbelt.github.io/2019/10/17/Laya-%E5%91%BD%E4%BB%A4%E8%A1%8C%E7%BC%96%E8%AF%91-Mac/"/>
    <id>https://frostbelt.github.io/2019/10/17/Laya-命令行编译-Mac/</id>
    <published>2019-10-17T06:54:58.000Z</published>
    <updated>2019-11-18T03:35:46.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>总感觉 Laya 是一款对 Mac 很不友好的游戏引擎，一开 Layaair IDE 风扇就不停。IDE 的关闭、最大最小化还是在右上角，是在 Windows exe 上套了个壳吗？想在命令行编译，尝试了官方的 layaair2-cmd 还报错…</p></blockquote><p>后来，终于找到一个能在 Mac 上运行的命令行编译工具<a href="https://github.com/Cola-Zhang/layaair2-cmd-plus" target="_blank" rel="noopener">layaair2-cmd-plus</a></p><a id="more"></a><h3 id="编译"><a href="#编译" class="headerlink" title="编译"></a>编译</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ layaair2-plus-cmd compile</span><br></pre></td></tr></table></figure><h3 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">layaair2-plus-cmd publish -c web</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;总感觉 Laya 是一款对 Mac 很不友好的游戏引擎，一开 Layaair IDE 风扇就不停。IDE 的关闭、最大最小化还是在右上角，是在 Windows exe 上套了个壳吗？想在命令行编译，尝试了官方的 layaair2-cmd 还报错…&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后来，终于找到一个能在 Mac 上运行的命令行编译工具&lt;a href=&quot;https://github.com/Cola-Zhang/layaair2-cmd-plus&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;layaair2-cmd-plus&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="laya" scheme="https://frostbelt.github.io/tags/laya/"/>
    
  </entry>
  
  <entry>
    <title>npm uninstall -g</title>
    <link href="https://frostbelt.github.io/2019/10/17/npm-uninstall-g/"/>
    <id>https://frostbelt.github.io/2019/10/17/npm-uninstall-g/</id>
    <published>2019-10-17T06:47:43.000Z</published>
    <updated>2019-10-17T06:54:28.000Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">全局安装是:</span><br><span class="line">$ npm install xxx -g</span><br><span class="line">全局卸载是:</span><br><span class="line">$ npm uninstall xxx -g</span><br><span class="line">全局卸载后，查看全局安装的包:</span><br><span class="line">$ npm list --depth=0 -global</span><br><span class="line">发现还有残留，还有大量报错信息</span><br></pre></td></tr></table></figure><h3 id="解决方式"><a href="#解决方式" class="headerlink" title="解决方式"></a>解决方式</h3><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">查看 npm 配置:</span><br><span class="line">$ npm config list</span><br><span class="line">; cli configs</span><br><span class="line">metrics-registry = &quot;https://registry.npmjs.org/&quot;</span><br><span class="line">scope = &quot;&quot;</span><br><span class="line">user-agent = &quot;npm/6.1.0 node/v10.6.0 darwin x64&quot;</span><br><span class="line"></span><br><span class="line">; node bin location = /youpath/node/v10.6.0/bin/node</span><br><span class="line">; cwd = /youpath/node/v10.6.0/lib/node_modules</span><br><span class="line">; HOME = /xxx</span><br><span class="line">; &quot;npm config ls -l&quot; to show all defaults.</span><br><span class="line">然后到 /youpath/node/v10.6.0/lib/node_modules 下 rm -rf 掉你想删掉的包</span><br><span class="line">再次 npm list --depth=0 -global 后正常</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;全局安装是:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm install xxx -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;全局卸载是:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm uninstall xxx -g&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;全局卸载后，查看全局安装的包:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;$ npm list --depth=0 -global&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;发现还有残留，还有大量报错信息&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;解决方式&quot;&gt;&lt;a href=&quot;#解决方式&quot; class=&quot;headerlink&quot; title=&quot;解决方式&quot;&gt;&lt;/a&gt;解决方式&lt;/h3&gt;
    
    </summary>
    
    
      <category term="npm" scheme="https://frostbelt.github.io/tags/npm/"/>
    
  </entry>
  
  <entry>
    <title>阿里云ECS开启websocket</title>
    <link href="https://frostbelt.github.io/2019/09/12/%E9%98%BF%E9%87%8C%E4%BA%91ECS%E5%BC%80%E5%90%AFwebsocket/"/>
    <id>https://frostbelt.github.io/2019/09/12/阿里云ECS开启websocket/</id>
    <published>2019-09-12T02:14:59.000Z</published>
    <updated>2019-09-12T02:46:17.000Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>本地测试没问题，但放到阿云 ECS 上后 websocket 无法链接</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1. 安全组放行 websocket 服务端口</span><br><span class="line">2. 开启防火墙并设置端口开放</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="安全组放行-websocket-服务端口"><a href="#安全组放行-websocket-服务端口" class="headerlink" title="安全组放行 websocket 服务端口"></a>安全组放行 websocket 服务端口</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">注: 每个 ECS 实例会有一个默认的安全组，这个安全组并不会显示在&quot;网络和安全-&gt;安全组&quot;列表中</span><br><span class="line">控制台-&gt;云服务器 ECS-&gt;实例-&gt;右键&quot;更多&quot;-&gt;网络和安全组-&gt;安全组配置-&gt;配置规则</span><br><span class="line">网卡类型: 内网</span><br><span class="line">规则方向: 入方向</span><br><span class="line">授权策略: 允许</span><br><span class="line">协议类型: 自定义TCP</span><br><span class="line">端口范围: 8000/8000 (websocket 使用的端口)</span><br><span class="line">优先级: 1</span><br><span class="line">授权类型: IPv4地址段访问</span><br><span class="line">授权对象: 0.0.0.0/0</span><br></pre></td></tr></table></figure><h3 id="开启防火墙并设置端口开放"><a href="#开启防火墙并设置端口开放" class="headerlink" title="开启防火墙并设置端口开放"></a>开启防火墙并设置端口开放</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"># 开启防火墙</span><br><span class="line">$ systemctl start firewalld</span><br><span class="line"># 设置打开的端口号（永久打开）</span><br><span class="line">$ firewall-cmd --add-port=8000/tcp --permanent</span><br><span class="line"># 更新防火墙配置</span><br><span class="line">$ firewall-cmd --reload</span><br><span class="line"># 查看已经打开的端口</span><br><span class="line">$ firewall-cmd --list-all</span><br><span class="line">注: 需要把之前的 80、443 等对外端口都开一下，以免影响业务</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;本地测试没问题，但放到阿云 ECS 上后 websocket 无法链接&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1. 安全组放行 websocket 服务端口&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2. 开启防火墙并设置端口开放&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="websocket" scheme="https://frostbelt.github.io/tags/websocket/"/>
    
      <category term="ecs" scheme="https://frostbelt.github.io/tags/ecs/"/>
    
  </entry>
  
</feed>
