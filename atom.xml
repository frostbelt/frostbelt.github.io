<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>frostbelt&#39;s home</title>
  
  <subtitle>想学更多有意思的东西，想做自己的网站，想学画画</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://frostbelt.github.io/"/>
  <updated>2021-04-09T02:52:43.377Z</updated>
  <id>https://frostbelt.github.io/</id>
  
  <author>
    <name>frostbelt</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>如果重新构建一个项目</title>
    <link href="https://frostbelt.github.io/2021/04/09/%E5%A6%82%E6%9E%9C%E9%87%8D%E6%96%B0%E6%9E%84%E5%BB%BA%E4%B8%80%E4%B8%AA%E9%A1%B9%E7%9B%AE/"/>
    <id>https://frostbelt.github.io/2021/04/09/如果重新构建一个项目/</id>
    <published>2021-04-09T02:27:42.000Z</published>
    <updated>2021-04-09T02:52:43.377Z</updated>
    
    <content type="html"><![CDATA[<h3 id="封装基础功能-20210409"><a href="#封装基础功能-20210409" class="headerlink" title="封装基础功能 20210409"></a>封装基础功能 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">navigateTo, request 等</span><br><span class="line">如 navigateTo</span><br><span class="line">想加一个公共参数，或定义页面间传递的参数时很方便</span><br><span class="line">想加路由权限控制时很方便</span><br></pre></td></tr></table></figure><h3 id="基础功能也要细化-20210409"><a href="#基础功能也要细化-20210409" class="headerlink" title="基础功能也要细化 20210409"></a>基础功能也要细化 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如把 helper 拆分为 core/local/server/client 等</span><br></pre></td></tr></table></figure><h3 id="异步都用-Promise-处理-20210409"><a href="#异步都用-Promise-处理-20210409" class="headerlink" title="异步都用 Promise 处理 20210409"></a>异步都用 Promise 处理 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">callback 方式不美观</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="调试工具-20210409"><a href="#调试工具-20210409" class="headerlink" title="调试工具 20210409"></a>调试工具 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">做好调试工具</span><br><span class="line">将一些重要的信息记录到本地，方便调试</span><br><span class="line">将一些特别重要的信息上报到日志服务</span><br></pre></td></tr></table></figure><h3 id="基础的东西，不能有依赖；没有依赖的方法，尽量放在基础里-20210409"><a href="#基础的东西，不能有依赖；没有依赖的方法，尽量放在基础里-20210409" class="headerlink" title="基础的东西，不能有依赖；没有依赖的方法，尽量放在基础里 20210409"></a>基础的东西，不能有依赖；没有依赖的方法，尽量放在基础里 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">示例:</span><br><span class="line">依赖关系 config =&gt; helper =&gt; client</span><br><span class="line">有个 getFixedHost 方法，应该放在哪里？没有依赖，放在 config 或 helper 里</span><br><span class="line">后期可能有页面不引用 client，但是想使用 getFixedHost 方法</span><br></pre></td></tr></table></figure><h3 id="dist-除-index-html-外，不要加入-git-小程序除外-20210409"><a href="#dist-除-index-html-外，不要加入-git-小程序除外-20210409" class="headerlink" title="dist 除 index.html 外，不要加入 git (小程序除外) 20210409"></a>dist 除 index.html 外，不要加入 git (小程序除外) 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">文件的修改可以通过 .gitattributes 定义合并策略，强制合并</span><br><span class="line">但文件的修改和增删还是会报冲突</span><br><span class="line">.gitignore:</span><br><span class="line">dist/*</span><br><span class="line">!dist/index.html</span><br><span class="line">如果发布系统已支持自动拉代码或自动 build，当然不需要把 dist 加入 git</span><br></pre></td></tr></table></figure><h3 id="将常用的与业务无关的底层代码提交-npm-20210409"><a href="#将常用的与业务无关的底层代码提交-npm-20210409" class="headerlink" title="将常用的与业务无关的底层代码提交 npm 20210409"></a>将常用的与业务无关的底层代码提交 npm 20210409</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如 normal.scss</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;封装基础功能-20210409&quot;&gt;&lt;a href=&quot;#封装基础功能-20210409&quot; class=&quot;headerlink&quot; title=&quot;封装基础功能 20210409&quot;&gt;&lt;/a&gt;封装基础功能 20210409&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;navigateTo, request 等&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;如 navigateTo&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;想加一个公共参数，或定义页面间传递的参数时很方便&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;想加路由权限控制时很方便&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;基础功能也要细化-20210409&quot;&gt;&lt;a href=&quot;#基础功能也要细化-20210409&quot; class=&quot;headerlink&quot; title=&quot;基础功能也要细化 20210409&quot;&gt;&lt;/a&gt;基础功能也要细化 20210409&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;如把 helper 拆分为 core/local/server/client 等&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;异步都用-Promise-处理-20210409&quot;&gt;&lt;a href=&quot;#异步都用-Promise-处理-20210409&quot; class=&quot;headerlink&quot; title=&quot;异步都用 Promise 处理 20210409&quot;&gt;&lt;/a&gt;异步都用 Promise 处理 20210409&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;callback 方式不美观&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="fe" scheme="https://frostbelt.github.io/tags/fe/"/>
    
  </entry>
  
  <entry>
    <title>就医杂记</title>
    <link href="https://frostbelt.github.io/2020/08/14/%E5%B0%B1%E5%8C%BB%E6%9D%82%E8%AE%B0/"/>
    <id>https://frostbelt.github.io/2020/08/14/就医杂记/</id>
    <published>2020-08-14T02:06:55.000Z</published>
    <updated>2020-08-14T02:12:02.424Z</updated>
    
    <content type="html"><![CDATA[<h3 id="北京最好的肿瘤医院"><a href="#北京最好的肿瘤医院" class="headerlink" title="北京最好的肿瘤医院"></a>北京最好的肿瘤医院</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">北京肿瘤医院，地址： 北京海淀区阜成路52号(定慧寺)</span><br><span class="line">中国医学科学院肿瘤医院，地址： 朝阳区潘家园南里17号</span><br></pre></td></tr></table></figure><h3 id="挂号途径"><a href="#挂号途径" class="headerlink" title="挂号途径"></a>挂号途径</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 114 APP</span><br><span class="line">2. 114 电话 (电话和 APP 的号源并不完全相同，可以都试一下，但一般都不可能有近期的号)</span><br><span class="line">3. 好大夫在线（这是个新发现，在这个 APP 上可以申请让大夫给加号，虽然资源不是很多，但也是希望）</span><br><span class="line">4. 各医院 APP（有些医院的号源不会放在 114 上，需要在自己的 APP 上挂）</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;北京最好的肿瘤医院&quot;&gt;&lt;a href=&quot;#北京最好的肿瘤医院&quot; class=&quot;headerlink&quot; title=&quot;北京最好的肿瘤医院&quot;&gt;&lt;/a&gt;北京最好的肿瘤医院&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;t
      
    
    </summary>
    
    
      <category term="政府" scheme="https://frostbelt.github.io/tags/%E6%94%BF%E5%BA%9C/"/>
    
      <category term="医院" scheme="https://frostbelt.github.io/tags/%E5%8C%BB%E9%99%A2/"/>
    
  </entry>
  
  <entry>
    <title>MediaSource 音视频合并</title>
    <link href="https://frostbelt.github.io/2020/07/24/MediaSource-%E9%9F%B3%E8%A7%86%E9%A2%91%E5%90%88%E5%B9%B6/"/>
    <id>https://frostbelt.github.io/2020/07/24/MediaSource-音视频合并/</id>
    <published>2020-07-24T07:30:34.000Z</published>
    <updated>2020-07-24T07:31:42.269Z</updated>
    
    <content type="html"><![CDATA[<p>引自<a href="https://blog.csdn.net/camike/article/details/82797768" target="_blank" rel="noopener">Javascrit中使用MediaSource播放加密视频</a></p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">  &lt;head&gt;</span><br><span class="line">    &lt;title&gt;MSE Demo&lt;/title&gt;</span><br><span class="line">    &lt;style&gt;</span><br><span class="line">      video &#123;</span><br><span class="line">        max-width: 100%;</span><br><span class="line">      &#125;</span><br><span class="line">    &lt;/style&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;script type=&quot;text/javascript&quot;&gt;</span><br><span class="line"> </span><br><span class="line">    var audioFragments = [</span><br><span class="line">      &quot;media/audio/init.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-1.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-2.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-3.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-4.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-5.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-6.mp4&quot;,</span><br><span class="line">      &quot;media/audio/seg-7.mp4&quot;,</span><br><span class="line">    ];</span><br><span class="line">    var videoFragments = [</span><br><span class="line">      &quot;media/video/init.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-1.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-2.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-3.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-4.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-5.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-6.mp4&quot;,</span><br><span class="line">      &quot;media/video/seg-7.mp4&quot;,</span><br><span class="line">    ];</span><br><span class="line"> </span><br><span class="line">    function MSELoadTrack(fragments, type, mediaSource, name) &#123;</span><br><span class="line">       return new Promise(function(resolve, reject) &#123;</span><br><span class="line">          var sourceBuffer;</span><br><span class="line">          var curFragment = 0;</span><br><span class="line"> </span><br><span class="line">          function addNextFragment() &#123;</span><br><span class="line">              if (mediaSource.readyState == &quot;closed&quot;) &#123;</span><br><span class="line">                return;</span><br><span class="line">              &#125;</span><br><span class="line">              if (curFragment &gt;= fragments.length) &#123;</span><br><span class="line">                resolve();</span><br><span class="line">                return;</span><br><span class="line">              &#125;</span><br><span class="line"> </span><br><span class="line">              var fragmentFile = fragments[curFragment++];</span><br><span class="line"> </span><br><span class="line">              var req = new XMLHttpRequest();</span><br><span class="line">              req.open(&quot;GET&quot;, fragmentFile);</span><br><span class="line">              req.responseType = &quot;arraybuffer&quot;;</span><br><span class="line"> </span><br><span class="line">              req.addEventListener(&quot;load&quot;, function() &#123;</span><br><span class="line">                  sourceBuffer.appendBuffer(new Uint8Array(req.response));</span><br><span class="line">              &#125;);</span><br><span class="line"> </span><br><span class="line">              req.addEventListener(&quot;error&quot;, function()&#123;reject();&#125;);</span><br><span class="line">              req.addEventListener(&quot;abort&quot;, function()&#123;reject();&#125;);</span><br><span class="line"> </span><br><span class="line">              req.send(null);</span><br><span class="line">          &#125;</span><br><span class="line"> </span><br><span class="line">          sourceBuffer = mediaSource.addSourceBuffer(type);</span><br><span class="line">          sourceBuffer.addEventListener(&quot;updateend&quot;, addNextFragment);</span><br><span class="line">          addNextFragment();</span><br><span class="line"> </span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"> </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line"> </span><br><span class="line">  &lt;/head&gt;</span><br><span class="line">  &lt;body&gt;</span><br><span class="line">    &lt;h1&gt;Media Source Extensions Demo&lt;/h1&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;video id=&quot;v&quot; controls preload=&quot;auto&quot;&gt;&lt;/video&gt;</span><br><span class="line"> </span><br><span class="line">    &lt;script&gt;</span><br><span class="line"> </span><br><span class="line">      function Load() &#123;</span><br><span class="line"> </span><br><span class="line">        var video = document.getElementById(&quot;v&quot;);</span><br><span class="line"> </span><br><span class="line">        const audioContentType = &apos;audio/mp4; codecs=&quot;mp4a.40.2&quot;&apos;; // AAC-LC</span><br><span class="line">        const videoContentType = &apos;video/mp4; codecs=&quot;avc1.64001F&quot;&apos;; // High profile level 3.1</span><br><span class="line"> </span><br><span class="line">        var ms = new MediaSource();</span><br><span class="line">        video.src = URL.createObjectURL(ms);</span><br><span class="line"> </span><br><span class="line">        var SourceOpen = function () &#123;</span><br><span class="line">          ms.removeEventListener(&quot;sourceopen&quot;, SourceOpen);</span><br><span class="line"> </span><br><span class="line">          Promise.all([MSELoadTrack(videoFragments, videoContentType, ms, &quot;video&quot;), MSELoadTrack(audioFragments, audioContentType, ms, &quot;audio&quot;)]).then(function()&#123;ms.endOfStream();&#125;);</span><br><span class="line"> </span><br><span class="line">        &#125;</span><br><span class="line"> </span><br><span class="line">        ms.addEventListener(&quot;sourceopen&quot;, SourceOpen);</span><br><span class="line">        video.addEventListener(&quot;canplay&quot;, function()&#123;video.play();&#125;);</span><br><span class="line">      &#125;</span><br><span class="line"> </span><br><span class="line">      Load();</span><br><span class="line"> </span><br><span class="line">    &lt;/script&gt;</span><br><span class="line">  &lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;引自&lt;a href=&quot;https://blog.csdn.net/camike/article/details/82797768&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Javascrit中使用MediaSource播放加密视频&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="video" scheme="https://frostbelt.github.io/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>网页 video 中如何加载字幕</title>
    <link href="https://frostbelt.github.io/2020/07/23/video-%E5%8A%A0%E8%BD%BD%E5%AD%97%E5%B9%95/"/>
    <id>https://frostbelt.github.io/2020/07/23/video-加载字幕/</id>
    <published>2020-07-23T03:17:45.000Z</published>
    <updated>2020-07-29T03:15:28.593Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>互联网给我们带来方便的同时，也时常让我们感到困惑。随便搜搜就出一大堆结果，然而总是有大量的重复和错误。本号发出的内容，都是自己实测过的，有问题请留言。</p></blockquote><h3 id="先看下效果-PC-chrome"><a href="#先看下效果-PC-chrome" class="headerlink" title="先看下效果(PC chrome)"></a>先看下效果(PC chrome)</h3><p><img src="https://p0.ssl.qhimg.com/t01340314555436f099.jpg" alt="效果"></p><h3 id="video-中加-track-标签"><a href="#video-中加-track-标签" class="headerlink" title="video 中加 track 标签"></a>video 中加 track 标签</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">只支持 vtt 格式</span><br><span class="line">&lt;video autoplay controls&gt;</span><br><span class="line">  &lt;source src=&quot;xxx.mp4&quot; type=&quot;video/mp4&quot;&gt;</span><br><span class="line">  &lt;track src=&quot;xxx.vtt&quot; kind=&quot;subtitles&quot; label=&quot;中文字幕&quot; srclang=&quot;zh&quot; default&gt;</span><br><span class="line">&lt;/video&gt;</span><br></pre></td></tr></table></figure><h3 id="track-的兼容性"><a href="#track-的兼容性" class="headerlink" title="track 的兼容性"></a>track 的兼容性</h3><p><img src="https://p0.ssl.qhimg.com/t01949c67e2705dcda5.jpg" alt="效果"></p><h3 id="在已生成的-video-中加-track"><a href="#在已生成的-video-中加-track" class="headerlink" title="在已生成的 video 中加 track"></a>在已生成的 video 中加 track</h3><p>如果不能在 video 生成时插入 track 标题，就用 JS 插入 track。比如用了人家的播放器，又没有添加字幕 API<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">let track = document.createElement(&quot;track&quot;);</span><br><span class="line">track.src = &quot;xxx.vtt&quot;;</span><br><span class="line">track.srclang = &quot;zh&quot;;</span><br><span class="line">track.setAttribute(&quot;label&quot;, &quot;中文字幕&quot;);</span><br><span class="line">track.setAttribute(&quot;kind&quot;, &quot;captions&quot;);</span><br><span class="line">track.setAttribute(&quot;default&quot;, &quot;&quot;);</span><br><span class="line">videoEle.appendChild(track);</span><br></pre></td></tr></table></figure></p><a id="more"></a><h3 id="如果-vtt-文件在-CDN-上"><a href="#如果-vtt-文件在-CDN-上" class="headerlink" title="如果 vtt 文件在 CDN 上"></a>如果 vtt 文件在 CDN 上</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">videoEle.setAttribute(&quot;crossdomain&quot;, &quot;true&quot;);</span><br><span class="line"></span><br><span class="line">并且 vtt 请求要支持 CORS</span><br></pre></td></tr></table></figure><h3 id="如果-CDN-并不能支持-CORS"><a href="#如果-CDN-并不能支持-CORS" class="headerlink" title="如果 CDN 并不能支持 CORS"></a>如果 CDN 并不能支持 CORS</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">搞个代理接口拿到 vtt 文件内容，如:</span><br><span class="line"></span><br><span class="line">srt 格式:</span><br><span class="line">00:00:03,334 --&gt; 00:00:06,971</span><br><span class="line">From his new album, &quot;Yo Hago Lo Que Me Da La Gana,&quot;</span><br><span class="line"></span><br><span class="line">vtt 格式:</span><br><span class="line">00:00:03.334 --&gt; 00:00:06.971</span><br><span class="line">From his new album, &quot;Yo Hago Lo Que Me Da La Gana,&quot;</span><br><span class="line"></span><br><span class="line">转换成如下格式(中间态，可以忽略):</span><br><span class="line">trackList = [</span><br><span class="line">  &#123;</span><br><span class="line">    begin : 3.334,</span><br><span class="line">    end : 6.971,</span><br><span class="line">    text : &apos;From his new album, &quot;Yo Hago Lo Que Me Da La Gana,&quot;&apos;,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line">let track = video.addTextTrack(&quot;captions&quot;, &quot;English&quot;, &quot;en&quot;);</span><br><span class="line">track.mode = &quot;showing&quot;;  // showing/hidden/disabled 因为可以添加多个字幕，一般默认显示一个就可以了</span><br><span class="line">trackList.forEach(item =&gt; &#123;</span><br><span class="line">  track.addCue(new VTTCue(item.begin, item.end, item.text));</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h3 id="播放器切换视频时，清空字幕"><a href="#播放器切换视频时，清空字幕" class="headerlink" title="播放器切换视频时，清空字幕"></a>播放器切换视频时，清空字幕</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">video 有 addTextTrack 方法，但并没有对应的 removeTextTrack ！</span><br><span class="line">未解决，目前只能重置 video，显然不是好办法。</span><br><span class="line">如果您有更好的办法，请留言，谢谢！</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;互联网给我们带来方便的同时，也时常让我们感到困惑。随便搜搜就出一大堆结果，然而总是有大量的重复和错误。本号发出的内容，都是自己实测过的，有问题请留言。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;先看下效果-PC-chrome&quot;&gt;&lt;a href=&quot;#先看下效果-PC-chrome&quot; class=&quot;headerlink&quot; title=&quot;先看下效果(PC chrome)&quot;&gt;&lt;/a&gt;先看下效果(PC chrome)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://p0.ssl.qhimg.com/t01340314555436f099.jpg&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;video-中加-track-标签&quot;&gt;&lt;a href=&quot;#video-中加-track-标签&quot; class=&quot;headerlink&quot; title=&quot;video 中加 track 标签&quot;&gt;&lt;/a&gt;video 中加 track 标签&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;只支持 vtt 格式&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;video autoplay controls&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;source src=&amp;quot;xxx.mp4&amp;quot; type=&amp;quot;video/mp4&amp;quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;lt;track src=&amp;quot;xxx.vtt&amp;quot; kind=&amp;quot;subtitles&amp;quot; label=&amp;quot;中文字幕&amp;quot; srclang=&amp;quot;zh&amp;quot; default&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/video&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;track-的兼容性&quot;&gt;&lt;a href=&quot;#track-的兼容性&quot; class=&quot;headerlink&quot; title=&quot;track 的兼容性&quot;&gt;&lt;/a&gt;track 的兼容性&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://p0.ssl.qhimg.com/t01949c67e2705dcda5.jpg&quot; alt=&quot;效果&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;在已生成的-video-中加-track&quot;&gt;&lt;a href=&quot;#在已生成的-video-中加-track&quot; class=&quot;headerlink&quot; title=&quot;在已生成的 video 中加 track&quot;&gt;&lt;/a&gt;在已生成的 video 中加 track&lt;/h3&gt;&lt;p&gt;如果不能在 video 生成时插入 track 标题，就用 JS 插入 track。比如用了人家的播放器，又没有添加字幕 API&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;let track = document.createElement(&amp;quot;track&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;track.src = &amp;quot;xxx.vtt&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;track.srclang = &amp;quot;zh&amp;quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;track.setAttribute(&amp;quot;label&amp;quot;, &amp;quot;中文字幕&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;track.setAttribute(&amp;quot;kind&amp;quot;, &amp;quot;captions&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;track.setAttribute(&amp;quot;default&amp;quot;, &amp;quot;&amp;quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;videoEle.appendChild(track);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="js" scheme="https://frostbelt.github.io/tags/js/"/>
    
      <category term="video" scheme="https://frostbelt.github.io/tags/video/"/>
    
      <category term="track" scheme="https://frostbelt.github.io/tags/track/"/>
    
      <category term="todo" scheme="https://frostbelt.github.io/tags/todo/"/>
    
  </entry>
  
  <entry>
    <title>node 用户输入</title>
    <link href="https://frostbelt.github.io/2020/07/14/node-%E7%94%A8%E6%88%B7%E8%BE%93%E5%85%A5/"/>
    <id>https://frostbelt.github.io/2020/07/14/node-用户输入/</id>
    <published>2020-07-14T08:28:12.000Z</published>
    <updated>2020-07-14T08:28:27.941Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">process.stdin.setEncoding(&quot;utf8&quot;);</span><br><span class="line"> </span><br><span class="line">process.stdout.write(&quot;请输入ID:\n&quot;);</span><br><span class="line">process.stdin.on(&quot;data&quot;, (input) =&gt; &#123;</span><br><span class="line">  input = input.toString().trim();</span><br><span class="line">  console.log(`输入的ID为$&#123;input&#125;`);</span><br><span class="line">  process.exit(0);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class
      
    
    </summary>
    
    
      <category term="node" scheme="https://frostbelt.github.io/tags/node/"/>
    
  </entry>
  
  <entry>
    <title>阿里云配置 node 服务器</title>
    <link href="https://frostbelt.github.io/2020/07/13/%E9%98%BF%E9%87%8C%E4%BA%91%E9%85%8D%E7%BD%AE-node-%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    <id>https://frostbelt.github.io/2020/07/13/阿里云配置-node-服务器/</id>
    <published>2020-07-13T03:09:24.000Z</published>
    <updated>2020-07-13T03:12:06.251Z</updated>
    
    <content type="html"><![CDATA[<p>node 服务器占用的端口为 3000</p><h3 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在 ECS 安全组策略中开放 3000 端口，用 http://xxx.xxx.xxx:3000/ 访问</span><br></pre></td></tr></table></figure><h3 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">配置 nginx 代理:</span><br><span class="line">server &#123;</span><br><span class="line">  listen 80;</span><br><span class="line">  server_name xxx.xxx.xxx;</span><br><span class="line"></span><br><span class="line">  location / &#123;</span><br><span class="line">    proxy_pass http://127.0.0.1:3000;</span><br><span class="line">    root 1;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line">用 http://xxx.xxx.xxx/ 访问</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;node 服务器占用的端口为 3000&lt;/p&gt;
&lt;h3 id=&quot;方法一&quot;&gt;&lt;a href=&quot;#方法一&quot; class=&quot;headerlink&quot; title=&quot;方法一&quot;&gt;&lt;/a&gt;方法一&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="node" scheme="https://frostbelt.github.io/tags/node/"/>
    
      <category term="nginx" scheme="https://frostbelt.github.io/tags/nginx/"/>
    
      <category term="ali" scheme="https://frostbelt.github.io/tags/ali/"/>
    
  </entry>
  
  <entry>
    <title>video 隐藏下载/全屏按钮</title>
    <link href="https://frostbelt.github.io/2020/06/17/video-%E9%9A%90%E8%97%8F%E4%B8%8B%E8%BD%BD-%E5%85%A8%E5%B1%8F%E6%8C%89%E9%92%AE/"/>
    <id>https://frostbelt.github.io/2020/06/17/video-隐藏下载-全屏按钮/</id>
    <published>2020-06-17T01:35:49.000Z</published>
    <updated>2020-06-17T01:41:39.748Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>曾几何时，为了隐藏 video 的全屏按钮，好麻烦，要设置 controls 的宽度，把全屏按钮顶出去，还有兼容问题</p></blockquote><p>现在可以直接用 controlsList 控制显示什么(只考虑 android 的话)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;video controls controlsList=&apos;nofullscreen nodownload noremote footbar&apos;&gt;&lt;/video&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;blockquote&gt;
&lt;p&gt;曾几何时，为了隐藏 video 的全屏按钮，好麻烦，要设置 controls 的宽度，把全屏按钮顶出去，还有兼容问题&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;现在可以直接用 controlsList 控制显示什么(只考虑 android 的话)&lt;
      
    
    </summary>
    
    
      <category term="css" scheme="https://frostbelt.github.io/tags/css/"/>
    
      <category term="video" scheme="https://frostbelt.github.io/tags/video/"/>
    
  </entry>
  
  <entry>
    <title>js 生成 [1, 100] 的数组</title>
    <link href="https://frostbelt.github.io/2020/06/08/js-%E7%94%9F%E6%88%90-1-100-%E7%9A%84%E6%95%B0%E7%BB%84/"/>
    <id>https://frostbelt.github.io/2020/06/08/js-生成-1-100-的数组/</id>
    <published>2020-06-08T09:45:20.000Z</published>
    <updated>2020-06-08T09:45:58.295Z</updated>
    
    <content type="html"><![CDATA[<p>let arr = Array.from({ length:100 }, (v, k) =&gt; k + 1);</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;let arr = Array.from({ length:100 }, (v, k) =&amp;gt; k + 1);&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="js" scheme="https://frostbelt.github.io/tags/js/"/>
    
  </entry>
  
  <entry>
    <title>vue 组件开发神器 vue-sfc-cli</title>
    <link href="https://frostbelt.github.io/2020/05/29/vue-%E7%BB%84%E4%BB%B6%E5%BC%80%E5%8F%91%E7%A5%9E%E5%99%A8-vue-sfc-cli/"/>
    <id>https://frostbelt.github.io/2020/05/29/vue-组件开发神器-vue-sfc-cli/</id>
    <published>2020-05-29T06:34:26.000Z</published>
    <updated>2020-05-29T06:54:58.325Z</updated>
    
    <content type="html"><![CDATA[<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i vue-sfc-cli -g</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="初始化项目"><a href="#初始化项目" class="headerlink" title="初始化项目"></a>初始化项目</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">$ sfc-init</span><br><span class="line">✔ Is this a single component or a library? › Library                         开发一个组件还是组件库?</span><br><span class="line">✔ What is the npm name of your component? … element-ui-admin                 项目名称</span><br><span class="line">✔ What is the kebab-case tag name for your component? … element-ui-admin     项目名称(短横线命名)</span><br><span class="line">✔ Will this component be written in JavaScript or TypeScript? › JavaScript   JavaScript/TypeScript</span><br><span class="line">✔ Enter a location to save the component files: … ./element-ui-admin         项目存放路径</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">  Init is complete, your files have been generated and saved into the directory you specified above.</span><br><span class="line">  Within that directory, use src/element-ui-admin.vue as a starting point for your SFC.</span><br><span class="line">  When you&apos;re ready, run `npm run build` to generate the redistributable versions.</span><br><span class="line">$ ll</span><br><span class="line">total 0</span><br><span class="line">drwxr-xr-x  8 xxxxx  staff  256  5 28 15:18 element-ui-admin</span><br><span class="line">$ cd element-ui-admin</span><br><span class="line">$ ll</span><br><span class="line">total 16</span><br><span class="line">-rw-r--r--  1 xxxxx  staff    65  5 28 15:18 babel.config.js</span><br><span class="line">drwxr-xr-x  3 xxxxx  staff    96  5 28 15:18 build</span><br><span class="line">drwxr-xr-x  4 xxxxx  staff   128  5 28 15:18 dev                  自测目录</span><br><span class="line">-rw-r--r--  1 xxxxx  staff  1415  5 28 15:18 package.json</span><br><span class="line">drwxr-xr-x  4 xxxxx  staff   128  5 28 15:18 src                  源文件目录</span><br><span class="line">$ cnpm install</span><br></pre></td></tr></table></figure><h3 id="自测"><a href="#自测" class="headerlink" title="自测"></a>自测</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm run serve</span><br></pre></td></tr></table></figure><h3 id="发布-npm"><a href="#发布-npm" class="headerlink" title="发布 npm"></a>发布 npm</h3><p>参考<a href="https://www.jianshu.com/p/ea64fd01679c" target="_blank" rel="noopener">第一次发布npm包</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">主要有以下几步:</span><br><span class="line">1. 在 https://www.npmjs.com/ 注册账号</span><br><span class="line">2. 项目中登录 npm 账号</span><br><span class="line">  $ npm login</span><br><span class="line">3. 发布项目</span><br><span class="line">  $ npm publish</span><br></pre></td></tr></table></figure></p><h3 id="关于更新"><a href="#关于更新" class="headerlink" title="关于更新"></a>关于更新</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">再次 publish 前，先要更新 package.json 中的 version</span><br><span class="line">$ npm version patch/minor/major   补丁/小改/大改</span><br><span class="line">对应 version &quot;1.0.0&quot; 中的三段</span><br></pre></td></tr></table></figure><h3 id="遇到问题及解决"><a href="#遇到问题及解决" class="headerlink" title="遇到问题及解决"></a>遇到问题及解决</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">在 element-ui 基础上的二次封装，使用这种写法</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;el-checkbox-string&quot;,</span><br><span class="line">  template : `</span><br><span class="line">  </span><br><span class="line">  `,</span><br><span class="line">&#125;</span><br><span class="line">报错: [Vue warn]: You are using the runtime-only build of Vue where the template compiler is not available. Either pre-compile the templates into render functions, or use the compiler-included build.</span><br><span class="line"></span><br><span class="line">解决: 需要修改 vue 为 compiler（模板）模式</span><br><span class="line">加 vue.config.js 文件，内容为:</span><br><span class="line">module.exports = &#123;</span><br><span class="line">  productionSourceMap : false,</span><br><span class="line">  chainWebpack: config =&gt; &#123;</span><br><span class="line">    config.resolve.alias.set(&apos;vue$&apos;, &apos;vue/dist/vue.esm.js&apos;)</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ npm i vue-sfc-cli -g&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="npm" scheme="https://frostbelt.github.io/tags/npm/"/>
    
      <category term="vue" scheme="https://frostbelt.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>fiddler 转 https 为 http</title>
    <link href="https://frostbelt.github.io/2020/05/01/fiddler-%E8%BD%AC-https-%E4%B8%BA-http/"/>
    <id>https://frostbelt.github.io/2020/05/01/fiddler-转-https-为-http/</id>
    <published>2020-05-01T02:14:19.000Z</published>
    <updated>2020-05-01T02:21:09.592Z</updated>
    
    <content type="html"><![CDATA[<p>Rules -&gt; Customize Rules…<br>Go -&gt; to OnBeforeRequst</p><p>在 OnBeforeRequst 方法的开头添加内下内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">if (oSession.isHTTPS)&#123;</span><br><span class="line">  oSession.fullUrl = &quot;http://&quot; + oSession.hostname + oSession.PathAndQuery;</span><br><span class="line">&#125;</span><br><span class="line">注: 自测在 mi 6 系统浏览器里不好使，其它浏览器或 app 内没发现问题</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Rules -&amp;gt; Customize Rules…&lt;br&gt;Go -&amp;gt; to OnBeforeRequst&lt;/p&gt;
&lt;p&gt;在 OnBeforeRequst 方法的开头添加内下内容:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table
      
    
    </summary>
    
    
      <category term="fiddler" scheme="https://frostbelt.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>fiddler iphone 抓包 https</title>
    <link href="https://frostbelt.github.io/2020/05/01/fiddler-iphone-%E6%8A%93%E5%8C%85-https/"/>
    <id>https://frostbelt.github.io/2020/05/01/fiddler-iphone-抓包-https/</id>
    <published>2020-05-01T02:09:56.000Z</published>
    <updated>2020-05-01T02:13:44.833Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>android 一般装了 fiddler 的证书后就可以抓 https 包了，但 ios 有时不行，显示证书不被信任</p></blockquote><a id="more"></a><p>解决:<br>关于本机 -&gt; 证书信任设置<br>对已安装的证书添加信任</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;android 一般装了 fiddler 的证书后就可以抓 https 包了，但 ios 有时不行，显示证书不被信任&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="fiddler" scheme="https://frostbelt.github.io/tags/fiddler/"/>
    
  </entry>
  
  <entry>
    <title>rollup 打包 js 插件</title>
    <link href="https://frostbelt.github.io/2020/04/27/rollup-%E6%89%93%E5%8C%85-js-%E6%8F%92%E4%BB%B6/"/>
    <id>https://frostbelt.github.io/2020/04/27/rollup-打包-js-插件/</id>
    <published>2020-04-27T08:29:45.000Z</published>
    <updated>2020-04-27T08:35:58.840Z</updated>
    
    <content type="html"><![CDATA[<p>开源插件，需要判断 JS 执行环境，实现类似以下功能:<br><a href="https://www.jianshu.com/p/f75eaa5f1fa4" target="_blank" rel="noopener">JS兼容不同环境下执行</a></p><a id="more"></a><p><a href="https://www.rollupjs.com/guide/introduction/" target="_blank" rel="noopener">rollup</a> 可以打包时自己生成这套兼容代码</p><p>查看 <a href="https://github.com/frostbelt/demo_rollup" target="_blank" rel="noopener">demo</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开源插件，需要判断 JS 执行环境，实现类似以下功能:&lt;br&gt;&lt;a href=&quot;https://www.jianshu.com/p/f75eaa5f1fa4&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JS兼容不同环境下执行&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="rollup" scheme="https://frostbelt.github.io/tags/rollup/"/>
    
      <category term="插件" scheme="https://frostbelt.github.io/tags/%E6%8F%92%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>vscode 使用 ts 声明实现全局引用智能提示</title>
    <link href="https://frostbelt.github.io/2020/04/26/vscode-%E4%BD%BF%E7%94%A8-ts-%E5%A3%B0%E6%98%8E%E5%AE%9E%E7%8E%B0%E5%85%A8%E5%B1%80%E5%BC%95%E7%94%A8%E6%99%BA%E8%83%BD%E6%8F%90%E7%A4%BA/"/>
    <id>https://frostbelt.github.io/2020/04/26/vscode-使用-ts-声明实现全局引用智能提示/</id>
    <published>2020-04-26T06:19:04.000Z</published>
    <updated>2020-04-26T10:13:08.871Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>自己的全局依赖(JS 实现)，挂在 Vue.prototype 上，在其它 vue 中使用时，想有智能提示</p></blockquote><a id="more"></a><p>在根目录新建 fe.d.ts 声明文件(文件名任意)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line"></span><br><span class="line">export interface Helper &#123;</span><br><span class="line">  /**</span><br><span class="line"> * 获取 url 参数</span><br><span class="line">   * @param &#123;String&#125; href 默认取当前页地址</span><br><span class="line"> */</span><br><span class="line">  getParams (href?:String): Object</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">declare module &apos;vue/types/vue&apos; &#123;</span><br><span class="line">  interface Vue &#123;</span><br><span class="line">    $helper: Helper,</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>然后，重启 vscode !!!</p><p>这样，在其它 vue 中输入 <code>this.$helper.g</code> 时，会有智能提示<br><img src="https://p.ssl.qhimg.com/t010ff2c92bb2f778b8.jpg" alt="智能提示"></p><p>如果是 TS 实现，会自动生成 d.ts 声明文件，逐步重构吧</p>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;自己的全局依赖(JS 实现)，挂在 Vue.prototype 上，在其它 vue 中使用时，想有智能提示&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
    
      <category term="vscode" scheme="https://frostbelt.github.io/tags/vscode/"/>
    
      <category term="types" scheme="https://frostbelt.github.io/tags/types/"/>
    
  </entry>
  
  <entry>
    <title>vscode 搜索 node_modules 中的文件</title>
    <link href="https://frostbelt.github.io/2020/04/26/vscode-%E6%90%9C%E7%B4%A2-node-modules-%E4%B8%AD%E7%9A%84%E6%96%87%E4%BB%B6/"/>
    <id>https://frostbelt.github.io/2020/04/26/vscode-搜索-node-modules-中的文件/</id>
    <published>2020-04-26T02:13:19.000Z</published>
    <updated>2020-04-26T02:30:40.757Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>想打开 element-ui 下的 message.d.ts 文件，但 node_modules 下有几百个依赖，找到 element-ui 要翻半天</p></blockquote><p>使用扩展 search-node-modules</p><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">1. 安装扩展 search-node-modules</span><br><span class="line">2. cmd + p</span><br><span class="line">3. 输入 &gt;node，选择 search node_modules，显示 node_modules 下所有目录/文件</span><br><span class="line">3. 输入 element-ui, 选择 element-ui，显示 element-ui 下所有目录/文件</span><br><span class="line">4. 输入 types，选择 types，显示 types 下所有目录/文件</span><br><span class="line">5. 输入 message.d.ts，选择打开文件</span><br><span class="line"></span><br><span class="line">事实上，从 3 开始，就像在命令上下打开一个文件</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;想打开 element-ui 下的 message.d.ts 文件，但 node_modules 下有几百个依赖，找到 element-ui 要翻半天&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用扩展 search-node-modules&lt;/p&gt;
    
    </summary>
    
    
      <category term="vscode" scheme="https://frostbelt.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>vue 通用组件</title>
    <link href="https://frostbelt.github.io/2020/04/23/vue-%E9%80%9A%E7%94%A8%E7%BB%84%E4%BB%B6/"/>
    <id>https://frostbelt.github.io/2020/04/23/vue-通用组件/</id>
    <published>2020-04-23T07:50:18.000Z</published>
    <updated>2020-04-23T08:03:44.736Z</updated>
    
    <content type="html"><![CDATA[<p>类似 element ui 中的 <code>this.$message.success(&#39;提交成功&#39;)</code> 这种通用组件是怎么生成的?</p><p>–Loading<br> |<strong>Loading.vue<br> |</strong>index.js</p><a id="more"></a><p>Loading.vue<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div v-show=&quot;show&quot; class=&quot;loading&quot;&gt;&lt;/div&gt;</span><br><span class="line">&lt;/template&gt;</span><br><span class="line">&lt;script&gt;</span><br><span class="line">export default &#123;</span><br><span class="line">  name: &quot;loading&quot;,</span><br><span class="line">  props: &#123;&#125;,</span><br><span class="line">  data() &#123;</span><br><span class="line">    return &#123;</span><br><span class="line">      show: false</span><br><span class="line">    &#125;;</span><br><span class="line">  &#125;,</span><br><span class="line">  methods: &#123;</span><br><span class="line">    init() &#123;&#125;</span><br><span class="line">  &#125;,</span><br><span class="line">  mounted() &#123;</span><br><span class="line">    this.init();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line">&lt;style lang=&quot;scss&quot; scoped&gt;</span><br><span class="line">...</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure></p><p>index.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Loading from &quot;./Loading&quot;</span><br><span class="line"></span><br><span class="line">const LoadingConstructor = Vue.extend(Loading);</span><br><span class="line">const Ld = &#123;</span><br><span class="line">  init() &#123;</span><br><span class="line">    if (this.is_inited) &#123;</span><br><span class="line">      return;</span><br><span class="line">    &#125;</span><br><span class="line">    this.is_inited = true;</span><br><span class="line"></span><br><span class="line">    this.instance = new LoadingConstructor(&#123;</span><br><span class="line">      data: &#123;&#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">    this.instance.vm = this.instance.$mount();    // $mount() 没有参数时，模板将被渲染为文档之外的元素</span><br><span class="line">    document.body.appendChild(this.instance.$el); // 这种情况下必须使用原生 DOM API 把它插入文档中</span><br><span class="line">    this.instance.dom = this.instance.$el;</span><br><span class="line">  &#125;,</span><br><span class="line"></span><br><span class="line">  show() &#123;</span><br><span class="line">    this.init();</span><br><span class="line">    this.instance.vm.show = true;                 // 可直接操作 Loading.vue 的 data</span><br><span class="line">  &#125;,</span><br><span class="line">  hide() &#123;</span><br><span class="line">    this.init();</span><br><span class="line">    this.instance.vm.show = false;</span><br><span class="line">  &#125;,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">export default Ld;</span><br></pre></td></tr></table></figure></p><p>使用<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">import Ld from &quot;xxx/Loading&quot;;</span><br><span class="line"></span><br><span class="line">Ld.show();</span><br><span class="line">or </span><br><span class="line">Ld.hide();</span><br></pre></td></tr></table></figure></p><p>当然也可以挂下 Vue 下<br>main.js<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">import Vue from &apos;vue&apos;</span><br><span class="line">import Loading from &quot;xxx/Loading&quot;;</span><br><span class="line"></span><br><span class="line">Vue.prototype.$loading = Loading;</span><br></pre></td></tr></table></figure></p><p>在其它 vue 中<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">this.$loading.show();</span><br><span class="line">or </span><br><span class="line">this.$loading.hide();</span><br></pre></td></tr></table></figure></p><p>参考:<br><a href="https://www.cnblogs.com/fangnianqin/p/10103216.html" target="_blank" rel="noopener">element-ui Message组件源码分析整理笔记（八）</a><br><a href="https://www.cnblogs.com/hentai-miao/p/10271652.html" target="_blank" rel="noopener">Vue 基础知识之 Vue.extend</a></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;类似 element ui 中的 &lt;code&gt;this.$message.success(&amp;#39;提交成功&amp;#39;)&lt;/code&gt; 这种通用组件是怎么生成的?&lt;/p&gt;
&lt;p&gt;–Loading&lt;br&gt; |&lt;strong&gt;Loading.vue&lt;br&gt; |&lt;/strong&gt;index.js&lt;/p&gt;
    
    </summary>
    
    
      <category term="vue" scheme="https://frostbelt.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>git https 访问,长期存储密码</title>
    <link href="https://frostbelt.github.io/2020/04/23/git-https-%E8%AE%BF%E9%97%AE-%E9%95%BF%E6%9C%9F%E5%AD%98%E5%82%A8%E5%AF%86%E7%A0%81/"/>
    <id>https://frostbelt.github.io/2020/04/23/git-https-访问-长期存储密码/</id>
    <published>2020-04-23T06:13:57.000Z</published>
    <updated>2020-04-23T06:18:15.112Z</updated>
    
    <content type="html"><![CDATA[<p>git ssh 访问，只要把 ssh 公匙放到 git server 端就可以了，不需要输入账号密码</p><p>但有些情况下，不能使用 ssh 方式，比如: 万恶的公司网限制了 ssh 端口</p><a id="more"></a><p>解决方法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># 长期存储 git 账号密码</span><br><span class="line">$ git config --global credential.helper store</span><br><span class="line"></span><br><span class="line"># 也可以设置缓存，默认 15 分钟内不需要再次输入账号密码</span><br><span class="line">$ git config --global credential.helper cache</span><br><span class="line"># 也可以设置缓存时间，这样就设置一个小时之后失效</span><br><span class="line">$ git config --global credential.helper &apos;cache –timeout=3600&apos;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;git ssh 访问，只要把 ssh 公匙放到 git server 端就可以了，不需要输入账号密码&lt;/p&gt;
&lt;p&gt;但有些情况下，不能使用 ssh 方式，比如: 万恶的公司网限制了 ssh 端口&lt;/p&gt;
    
    </summary>
    
    
      <category term="git" scheme="https://frostbelt.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>vscode alias 代码提示</title>
    <link href="https://frostbelt.github.io/2020/04/21/vscode-alias-%E4%BB%A3%E7%A0%81%E6%8F%90%E7%A4%BA/"/>
    <id>https://frostbelt.github.io/2020/04/21/vscode-alias-代码提示/</id>
    <published>2020-04-21T09:11:54.000Z</published>
    <updated>2020-04-21T09:16:11.971Z</updated>
    
    <content type="html"><![CDATA[<p>vue 配置了 alias，如:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">chainWebpack: config =&gt; &#123;</span><br><span class="line">  config.resolve.alias.set(&apos;vue$&apos;, &apos;vue/dist/vue.esm.js&apos;)</span><br><span class="line">  config.resolve.alias.set(&apos;@img&apos;, path.resolve(__dirname, &apos;src/assets/images&apos;))</span><br><span class="line">  config.resolve.alias.set(&apos;@js&apos;, path.resolve(__dirname, &apos;src/assets/js&apos;))</span><br><span class="line">  ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样在 <code>import XXX from &quot;@js/xxx&quot;</code> 后，没有代码提示了</p><a id="more"></a><p>在根目录新建 <code>jsconfig.json</code>，内容:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">&quot;compilerOptions&quot;: &#123;</span><br><span class="line">&quot;baseUrl&quot;: &quot;./&quot;,</span><br><span class="line">&quot;paths&quot;: &#123;</span><br><span class="line">&quot;@img/*&quot;: [&quot;src/assets/images/*&quot;],</span><br><span class="line">&quot;@js/*&quot;: [&quot;src/assets/js/*&quot;],</span><br><span class="line">      ...</span><br><span class="line">&#125;</span><br><span class="line">&#125;,</span><br><span class="line">&quot;exclude&quot;: [&quot;node_modules&quot;, &quot;dist&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>用于配置 alias 指向的目录，然后 <code>重启 vscode!</code></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;vue 配置了 alias，如:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;chainWebpack: config =&amp;gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.resolve.alias.set(&amp;apos;vue$&amp;apos;, &amp;apos;vue/dist/vue.esm.js&amp;apos;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.resolve.alias.set(&amp;apos;@img&amp;apos;, path.resolve(__dirname, &amp;apos;src/assets/images&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  config.resolve.alias.set(&amp;apos;@js&amp;apos;, path.resolve(__dirname, &amp;apos;src/assets/js&amp;apos;))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  ...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样在 &lt;code&gt;import XXX from &amp;quot;@js/xxx&amp;quot;&lt;/code&gt; 后，没有代码提示了&lt;/p&gt;
    
    </summary>
    
    
      <category term="vscode" scheme="https://frostbelt.github.io/tags/vscode/"/>
    
      <category term="vue" scheme="https://frostbelt.github.io/tags/vue/"/>
    
  </entry>
  
  <entry>
    <title>Hybird 开发注意点</title>
    <link href="https://frostbelt.github.io/2020/04/20/Hybird-%E5%BC%80%E5%8F%91%E6%B3%A8%E6%84%8F%E7%82%B9/"/>
    <id>https://frostbelt.github.io/2020/04/20/Hybird-开发注意点/</id>
    <published>2020-04-20T07:18:16.000Z</published>
    <updated>2020-04-24T12:09:17.077Z</updated>
    
    <content type="html"><![CDATA[<h3 id="客户端回调页面"><a href="#客户端回调页面" class="headerlink" title="客户端回调页面"></a>客户端回调页面</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">接口回调方法名由 js 指定，类似 jsonp，否则多次连续调用同一接口只能串行</span><br><span class="line">example:</span><br><span class="line">web-&gt;client</span><br><span class="line">Client.getUserInfo(&#123;</span><br><span class="line">  callbackName : &quot;xxx&quot;,</span><br><span class="line">&#125;);</span><br><span class="line">client-&gt;web</span><br><span class="line">window.xxx(&#123;</span><br><span class="line">  vc : 10001,</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><a id="more"></a><h3 id="输入法弹起时"><a href="#输入法弹起时" class="headerlink" title="输入法弹起时"></a>输入法弹起时</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入法弹起时，最好是缩小 webview 高度，可以避免以下问题:</span><br><span class="line">  a. fixed head 被顶出视野外(如果输入法把整个 webview 顶起)；</span><br><span class="line">  b. fixed foot(弹幕等) 被盖住(如果输入法把 webview 遮盖)；</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;客户端回调页面&quot;&gt;&lt;a href=&quot;#客户端回调页面&quot; class=&quot;headerlink&quot; title=&quot;客户端回调页面&quot;&gt;&lt;/a&gt;客户端回调页面&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;接口回调方法名由 js 指定，类似 jsonp，否则多次连续调用同一接口只能串行&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;example:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;web-&amp;gt;client&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Client.getUserInfo(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  callbackName : &amp;quot;xxx&amp;quot;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;client-&amp;gt;web&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;window.xxx(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  vc : 10001,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
    
      <category term="hybird" scheme="https://frostbelt.github.io/tags/hybird/"/>
    
  </entry>
  
  <entry>
    <title>vscode 搜索支持通配符</title>
    <link href="https://frostbelt.github.io/2020/04/20/vscode-%E6%90%9C%E7%B4%A2%E6%94%AF%E6%8C%81%E9%80%9A%E9%85%8D%E7%AC%A6/"/>
    <id>https://frostbelt.github.io/2020/04/20/vscode-搜索支持通配符/</id>
    <published>2020-04-20T07:14:16.000Z</published>
    <updated>2020-04-20T07:14:53.705Z</updated>
    
    <content type="html"><![CDATA[<p>示例:<br>./src/*/page</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;示例:&lt;br&gt;./src/*/page&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="vscode" scheme="https://frostbelt.github.io/tags/vscode/"/>
    
  </entry>
  
  <entry>
    <title>实现CORS 服务端需要做什么</title>
    <link href="https://frostbelt.github.io/2020/04/18/%E5%AE%9E%E7%8E%B0CORS-%E6%9C%8D%E5%8A%A1%E7%AB%AF%E9%9C%80%E8%A6%81%E5%81%9A%E4%BB%80%E4%B9%88/"/>
    <id>https://frostbelt.github.io/2020/04/18/实现CORS-服务端需要做什么/</id>
    <published>2020-04-18T12:15:41.000Z</published>
    <updated>2020-04-18T12:17:31.191Z</updated>
    
    <content type="html"><![CDATA[<p>PHP 实现，在构造函数中:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// host 白名单</span><br><span class="line">$hostList = [</span><br><span class="line">  &apos;http://xxx.xxx.xxx&apos;,</span><br><span class="line">  &apos;http://localhost:8080&apos;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line">if( !empty($_SERVER[&apos;HTTP_ORIGIN&apos;]) &amp;&amp; in_array($_SERVER[&apos;HTTP_ORIGIN&apos;], $hostList))&#123;</span><br><span class="line">  header(&apos;Access-Control-Allow-Origin:&apos;.$_SERVER[&apos;HTTP_ORIGIN&apos;]);</span><br><span class="line">  header(&apos;Access-Control-Allow-Credentials:true&apos;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;PHP 实现，在构造函数中:&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;
      
    
    </summary>
    
    
      <category term="php" scheme="https://frostbelt.github.io/tags/php/"/>
    
      <category term="cors" scheme="https://frostbelt.github.io/tags/cors/"/>
    
  </entry>
  
</feed>
